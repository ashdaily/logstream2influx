version: 2.1
orbs:
  python: circleci/python@2.1.1

executors:
  docker-executor:
    docker:
      - image: circleci/
    working_directory: ~/repo

jobs:
  run_tests:
    executor: python/default
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          environment:
            COMPOSE_VERSION: 'v2.25.0'
          command: |
            curl -sSL "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            mkdir -p ~/.docker/cli-plugins
            chmod +x ~/docker-compose
            mv ~/docker-compose ~/.docker/cli-plugins/docker-compose

      - setup_remote_docker
      - run:
          name: CI permissions
          command: chmod -R +x .
      - run:
          name: Clean up
          command: ./cleanup.sh
      - run:
          name: Test mode
          command: ./testmode.sh
      - run:
          name: Spin Up Influx DB
          command: docker compose -f compose.ci.yaml --env-file .env.local up -d rated_db
      - run:
          name: Build Log Processor
          command: docker compose -f compose.ci.yaml --env-file .env.local build log_processor --no-cache
      - run:
          name: Build Api
          command: docker compose -f compose.ci.yaml --env-file .env.local build rated_api --no-cache
      - run:
          name: Run Log Processor tests
          command: docker compose -f compose.ci.yaml --env-file .env.local run log_processor python -m unittest
      - run:
          name: Run Api Tests
          command: docker compose -f compose.ci.yaml --env-file .env.local run rated_api python -m unittest
      - run:
          name: Stop and remove containers # want to do this so when we run ci locally, it cleans up
          command: docker compose -f compose.ci.yaml --env-file .env.local down -v

workflows:
  version: 2
  test-workflow:
    jobs:
      - run_tests